{"version":3,"sources":["components/NoteCard.js","pages/Notes.js","pages/Create.js","components/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","avatar","backgroundColor","note","category","yellow","green","pink","blue","NoteCard","handleDelete","classes","Card","elevation","className","test","CardHeader","Avatar","toUpperCase","action","IconButton","onClick","id","DeleteOutlined","title","subheader","CardContent","Typography","variant","color","details","Notes","useState","notes","setNotes","useEffect","fetch","then","res","json","data","a","method","newNotes","filter","Container","breakpointCols","default","1100","700","500","columnClassName","map","useStyles","field","marginTop","marginBottom","display","Create","history","useHistory","setTitle","setDetails","titleError","setTitleError","detailsError","setDetailsError","setCategory","size","component","gutterBottom","noValidate","autoComplete","onSubmit","e","preventDefault","headers","body","JSON","stringify","push","TextField","onChange","target","value","label","fullWidth","required","error","multiline","rows","erro","r","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","Button","type","endIcon","theme","page","width","padding","spacing","drawer","paperDrawer","root","active","background","appBar","toolbar","mixins","date","flexGrow","marginLeft","Layout","children","menuItems","text","icon","SubjectOutlined","path","AddCircleOutlineOutlined","location","useLocation","AppBar","Toolbar","format","Date","src","Drawer","anchor","paper","List","item","ListItem","button","pathname","ListItemIcon","ListItemText","primary","createMuiTheme","palette","secondary","main","purple","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","App","ThemeProvider","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d857cfbf.chunk.js","sourcesContent":["import { Avatar, Card, CardContent, CardHeader, IconButton, makeStyles, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { DeleteOutlined } from '@material-ui/icons';\nimport { blue, green, pink, yellow } from '@material-ui/core/colors';\n\nconst useStyle = makeStyles({\n    // test: {\n    //     border: (note) => {\n    //         if (note.category == 'work') {\n    //             return '1px solid red'\n    //         }\n    //     }\n    // }\n    //made a conditional style \n    avatar:{\n        backgroundColor:(note)=>{\n            if(note.category == 'work'){\n                return yellow[700]\n            }\n            if(note.category == 'money'){\n                return green[500]\n            }\n            if(note.category == 'reminder'){\n                return pink[500]\n            }\n            return blue[500]\n        }\n    }\n\n})\nexport default function NoteCard({ note, handleDelete }) {\n    const classes = useStyle(note)\n    return (\n        <div>\n            <Card elevation={2} className={classes.test}>\n                <CardHeader\n                avatar={\n                    <Avatar className={classes.avatar}>\n                        {note.category[0].toUpperCase()}\n                    </Avatar>\n                }\n                    action={\n                        <IconButton onClick={() => handleDelete(note.id)} >\n                            <DeleteOutlined />\n                        </IconButton>\n                    }\n                    title={note.title}\n                    subheader={note.category}\n                />\n                <CardContent >\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                        {note.details}\n                    </Typography>\n                </CardContent>\n\n            </Card>\n        </div>\n    )\n}\n","import { Container, Grid, Paper } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react'\nimport Masonry from 'react-masonry-css';\nimport NoteCard from '../components/NoteCard';\n\nexport default function Notes() {\n  const [notes, setNotes] = useState([]);\n\n  //this is homepage. data is saved in the json server,get data from db and showing to the homepage \n  useEffect(() => {\n    fetch('http://localhost:8000/notes')\n      .then(res => res.json())\n      .then(data => setNotes(data))\n  }, [])\n\n  //this function is for deleting notes \n  const handleDelete = async (id) => {\n    await fetch('http://localhost:8000/notes/' + id, {\n      method: 'DELETE'\n    })\n    const newNotes = notes.filter(note => note.id != id)\n    setNotes(newNotes)\n\n\n  }\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 1\n  };\n  return (\n    <Container>\n      {/* <Grid container spacing={3}> */}\n      {/* <Grid item xs={12} sm={6} md={3}>\n          <Paper>1</Paper>\n        </Grid>\n        <Grid item xs={12} md={3} sm={6}>\n        <Paper>2</Paper>\n        </Grid>\n        <Grid item xs={12} md={3} sm={6}>\n        <Paper>3</Paper>\n        </Grid>\n        <Grid item xs={12} md={3} sm={6}>\n        <Paper>4</Paper>   \n        </Grid> */}\n      <Masonry\n        breakpointCols={breakpointColumnsObj}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n        >\n        {notes.map(note => (\n          <div key={note.id} >\n            <NoteCard note={note} handleDelete={handleDelete} />\n          </div>\n\n        ))}\n      </Masonry>\n\n      {/* </Grid> */}\n    </Container>\n  )\n}","import React, { useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\nimport { makeStyles } from '@material-ui/core'\nimport TextField from '@material-ui/core/TextField'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block'\n  }\n})\n\nexport default function Create() {\n  const classes = useStyles()\n  const history = useHistory()\n  const [title, setTitle] = useState('')\n  const [details, setDetails] = useState('')\n  const [titleError, setTitleError] = useState(false)\n  const [detailsError, setDetailsError] = useState(false)\n  const [category, setCategory] = useState('money')\n\n  //this is the function for submit button.if title and details fields are empty then it will show error\n  const handleSubmit = (e) => {\n    e.preventDefault() //the page won't refreshed on submit\n    setTitleError(false)\n    setDetailsError(false)\n\n    if (title == '') {\n      setTitleError(true) //if the title is empty\n    }\n    if (details == '') {\n      setDetailsError(true) //if the details is empty\n    }\n    //if there are title and details then we fetch the database json server and post (save) data to the db \n    if (title && details) {\n      fetch('http://localhost:8000/notes', {\n        method: 'POST',\n        headers: {\"Content-type\": \"application/json\"},\n        body: JSON.stringify({ title, details, category })\n      }).then(() => history.push('/'))\n    } //then it redirects to homepage \n  }\n\n  return (\n    <Container size=\"sm\">\n      <Typography\n        variant=\"h6\" \n        color=\"textSecondary\"\n        component=\"h2\"\n        gutterBottom\n      >\n        Create a New Note\n      </Typography>\n      {/* first we tell the form not to use built in validation.and turned off auto complete */}\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <TextField className={classes.field}\n          onChange={(e) => setTitle(e.target.value)}\n          label=\"Note Title\" \n          variant=\"outlined\" \n          color=\"secondary\" \n          fullWidth\n          required\n          error={titleError}\n        />\n        <TextField className={classes.field}\n          onChange={(e) => setDetails(e.target.value)}\n          label=\"Details\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          multiline\n          rows={4}\n          fullWidth\n          required\n          erro r={detailsError}\n        />\n\n        {/* <Radio value=\"hello\" />\n        <Radio value=\"goodbye\" /> */}\n\n        <FormControl className={classes.field}>\n          <FormLabel>Note Category</FormLabel>\n          <RadioGroup value={category} onChange={(e) => setCategory(e.target.value)}>\n            <FormControlLabel value=\"money\" control={<Radio />} label=\"Money\" />\n            <FormControlLabel value=\"todos\" control={<Radio />} label=\"Todos\" />\n            <FormControlLabel value=\"reminders\" control={<Radio />} label=\"Reminders\" />\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\n          </RadioGroup>\n        </FormControl>\n\n        <Button\n          type=\"submit\" \n          color=\"secondary\" \n          variant=\"contained\"\n          endIcon={<KeyboardArrowRightIcon />}>\n          Submit\n        </Button> \n        {/* button should be inside the form for onSubmit acton */}\n      </form>\n\n      \n    </Container>\n  )\n}","import { AppBar, Avatar, Drawer, List, ListItem, ListItemIcon, ListItemText, makeStyles, Toolbar, Typography } from '@material-ui/core'\nimport { AddCircleOutlineOutlined, SubjectOutlined } from '@material-ui/icons';\nimport { format } from 'date-fns/esm';\nimport React from 'react'\nimport { useHistory, useLocation } from 'react-router';\nconst drawerWidth = 240;\nconst useStyle = makeStyles((theme) => {\n    return {\n        page: {\n            backgroundColor: '#f9f9f9',\n            width: '100%',\n            padding: theme.spacing(3)\n        },\n        drawer: {\n            width: drawerWidth\n        },\n        paperDrawer: {\n            width: drawerWidth\n        },\n        root: {\n            display: 'flex',\n        },\n        active: {\n            background: '#f4f4f4'\n        },\n        title: {\n            padding: theme.spacing(2)\n        },\n        appBar: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            // width: `calc(100% - ${drawerWidth}px)`,\n\n        },\n        toolbar: theme.mixins.toolbar,\n        date: {\n            flexGrow: 1\n        },\n        avatar:{\n            marginLeft: theme.spacing(2)\n        }\n    }\n})\nexport default function Layout({ children }) {\n    const classes = useStyle()\n    const menuItems = [\n        {\n            text: \"My Notes\",\n            icon: <SubjectOutlined color=\"primary\" />,\n            path: '/',\n        },\n        {\n            text: \"Create Notes\",\n            icon: <AddCircleOutlineOutlined color=\"primary\" />,\n            path: '/create',\n        }\n    ]\n    const history = useHistory()\n    const location = useLocation()\n    return (\n        <div className={classes.root}>\n            {/* making app bar */}\n            <AppBar\n\n                className={classes.appBar}\n\n            >\n                <Toolbar>\n                    <Typography className={classes.date}>\n                        Today is {format(new Date(), 'do MMMM Y')}\n                    </Typography>\n                    <Typography >Sabbir</Typography>\n                    <Avatar src=\"/mario-av.png\" className={classes.avatar}/>\n\n                </Toolbar>\n            </AppBar>\n            {/* making a drawer */}\n            <Drawer\n                className={classes.drawer}\n                variant=\"permanent\"\n                anchor=\"left\"\n                classes={{ paper: classes.paperDrawer }}\n            >\n                {/* classes is a built in method here to override css  */}\n                <div>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        Ninja Notes\n                    </Typography>\n                </div>\n                <List>\n                    {menuItems.map(item => (\n                        <ListItem\n                            button\n                            key={item.text}\n                            onClick={() => history.push(item.path)}\n                            className={location.pathname == item.path ? classes.active : null}\n                        >\n                            <ListItemIcon>{item.icon}</ListItemIcon>\n                            <ListItemText primary={item.text} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n            <div className={classes.page}>\n                <div className={classes.toolbar}></div>\n                {children}\n            </div>\n        </div>\n    )\n}\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Notes from './pages/Notes'\nimport Create from './pages/Create'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport { purple } from '@material-ui/core/colors';\nimport Layout from './components/Layout';\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: '#9c27b0'\n    },\n    primary: purple\n  },\n  typography: {\n    fontFamily: \"Quicksand\",\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600,\n    fontWeightBold: 700,\n  }\n})\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Layout>\n          {/*  layout not in the router , because we are gonna use the router inside the layout components*/}\n          <Switch>\n            <Route exact path=\"/\">\n              <Notes />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            <Route path=\"/notes\">\n              <Notes /> \n            </Route>\n          </Switch>\n        </Layout>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}